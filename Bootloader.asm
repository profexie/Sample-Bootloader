.INCLUDE DSEG.INC
.INCLUDE SYSDATA.INC
.INCLUDE KYBD.ASM
.XLIST
PAGE 118,121
TITLE KYBD ----- 03/06/86  "ASM BOOTLOADER"
.XLIST
INCLUDE DSEG.INC
INCLUDE POSTEQU.INC
.LIST
CODE	SEGMENT BYTE PUBLIC

	PUBLIC	K16
	PUBLIC	KEYBOARD_IO_1
	PUBLIC	KB_INT_1
	PUBLIC	SND_DATA

	EXTRN	BEEP:NEAR
	EXTRN	DDS:NEAR
	EXTRN	START_1:NEAR
	EXTRN	K6:BYTE
	EXTRN	K6L:ABS
	EXTRN	K7:BYTE
	EXTRN	K8:BYTE
	EXTRN	K10:BYTE
	EXTRN	K11:BYTE
	EXTRN	K12:BYTE
	EXTRN	K14:BYTE
	EXTRN	K15:BYTE
IF 64-Bitmode 
------ LOGIC DESCRIPTOR TABLE ENTRY STRUCTURE FOR CPU EXECUTION
LOGIC_DESC  STRUC 
ENTRY_POINT DWORD 0000:0472h ;---- the execution of the memory entry. Entry is for the Post Interupt descriptor.
CS_SECECTOR DWORD ? ; No determined value
WORD_COUNT DWORD BYTE 0000:7C00 ;-- How much words are going to be that are copied from stack
LOGIC_ACC_RIGHTS DWORD BYTE ? ;-- No determined value
DATA_RESERVED DWORD BIT(7 ->0xF) ;-- Interval on how much bits can be reserved.
PL3_DATA_ACCESS	EQU	11110011B	; PRESENT ;--- if data access is present
						; DPL = 3 
						; CODE/DATA SEGMENT
						; NOT EXECUTABLE
						; GROW-UP (OFFSET <= LIMIT)
						; WRITABLE
						; ACCESSED
CPL0_DATA_ACCESS	EQU	10010011B	; DPL =	0
CPL0_CODE_ACCESS	EQU	10011011B	; CPL 0 - NON-CONFORMING
LDT_DESC		EQU	11100010B
FREE_TSS		EQU	10000001B
INT_GATE		EQU	10000110B
TRAP_GATE		EQU	10000111B

VIRTUAL_ENABLE		EQU	0000000000000001B	; PROTECTED MODE ENABLE

THEN
     PUSH UD, DS
     CALL DDS 
     MOV BX, 10FH
	 CALL 0x1B, AX

CODE	SEGMENT BYTE PUBLIC

	PUBLIC	EQUIPMENT_1
	PUBLIC	MEMORY_SIZE_DET_1
	PUBLIC	NMI_INT_1

	EXTRN	C8042:NEAR		; Post send 8042 command routine
	EXTRN	CMOS_READ:NEAR		; READ CMOS LOCATION ROUTINE
	EXTRN	D1:NEAR 		; "PARITY CHECK 1" MESSAGE
	EXTRN	D2:NEAR 		; "PARITY CHECK 2" MESSAGE
	EXTRN	D2A:NEAR		; "?????" UNKNOWN ADDRESS MESSAGE
	EXTRN	DDS:NEAR		; LOAD (DS) WITH DATA SEGMENT SELECTOR
	EXTRN	OBF_42:NEAR		; POST WAIT 8042 RESPONSE ROUTINE
	EXTRN	PRT_HEX:NEAR		; DISPLAY CHARACTER ROUTINE
	EXTRN	PRT_SEG:NEAR		; DISPLAY FIVE CHARACTER ADDRESS ROUTINE
	EXTRN	P_MSG:NEAR		; DISPLAY MESSAGE STRING ROUTINE

MEMORY_SIZE_DET_1  PROC FAR
	STI				; INTERRUPTS BACK ON
	PUSH	DS			; SAVE SEGMENT
	CALL	DDS			; ESTABLISH ADDRESSING
	MOV	AX,@MEMORY_SIZE 	; GET VALUE
	POP	DS			; RECOVER SEGMENT
	IRET				; RETURN TO CALLER
MEMORY_SIZE_DET_1  ENDP